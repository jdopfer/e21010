// checking that Akima spline in ROOT agrees with Akima spline in scipy.interpolate
const double y[181] = {0.00136, 0.009864, 0.035083, 0.076836, 0.130861, 0.175945, 0.204255, 0.220644, 0.229123, 0.236119, 0.238991, 0.239086, 0.239133, 0.236904, 0.234083, 0.229718, 0.226798, 0.222428, 0.218334, 0.21485, 0.210203, 0.205908, 0.201291, 0.196876, 0.192867, 0.187576, 0.183037, 0.178506, 0.173344, 0.1703, 0.167557, 0.164159, 0.161341, 0.159205, 0.157803, 0.155903, 0.154524, 0.152942, 0.152399, 0.150988, 0.151302, 0.150212, 0.150265, 0.150284, 0.150315, 0.150226, 0.150155, 0.150231, 0.15036, 0.150007, 0.149731, 0.150528, 0.149703, 0.149796, 0.150705, 0.150777, 0.150457, 0.15157, 0.152763, 0.153565, 0.155509, 0.157303, 0.158243, 0.160386, 0.16367, 0.166184, 0.169464, 0.173058, 0.176416, 0.17914, 0.18294, 0.186254, 0.189581, 0.193629, 0.197201, 0.201831, 0.205461, 0.209624, 0.21394, 0.217668, 0.220567, 0.223733, 0.22733, 0.230937, 0.2337, 0.235497, 0.237937, 0.240704, 0.241609, 0.242223, 0.242908, 0.243385, 0.24114, 0.239323, 0.237957, 0.235083, 0.232687, 0.229326, 0.226521, 0.223415, 0.219542, 0.215864, 0.211981, 0.207703, 0.204303, 0.200679, 0.196803, 0.193447, 0.189649, 0.185721, 0.182757, 0.179516, 0.175647, 0.172681, 0.169739, 0.166709, 0.164115, 0.160984, 0.159415, 0.156812, 0.156126, 0.154598, 0.154168, 0.153668, 0.153612, 0.153055, 0.152742, 0.152333, 0.152467, 0.152848, 0.153735, 0.153707, 0.154362, 0.154896, 0.154498, 0.155144, 0.15548, 0.156236, 0.157289, 0.158292, 0.159607, 0.160342, 0.162297, 0.163169, 0.164949, 0.167973, 0.170116, 0.172183, 0.174588, 0.177893, 0.181518, 0.185398, 0.191161, 0.196008, 0.201535, 0.207219, 0.21335, 0.219562, 0.225143, 0.231722, 0.237548, 0.24374, 0.250968, 0.257471, 0.265034, 0.273413, 0.279579, 0.28669, 0.294113, 0.300166, 0.306583, 0.313223, 0.319843, 0.324723, 0.330898, 0.337765, 0.342753, 0.349028, 0.35419, 0.356697, 0.357818} ;
const double x[181] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180} ;
auto *g1 = new TGraph(181, x, y);
g1->Draw("AP");
auto aspl = ROOT::Math::Interpolator(0, ROOT::Math::Interpolation::kAKIMA);
aspl.SetData(181, x, y);
const int N = 500;
double X[N];
double Y[N];
double X0 = x[0];
double XN = x[180];
double dX = (XN - X0)/(N - 1);
for (int i = 0; i < 500; i++) { X[i] = X0 + i*dX ; Y[i] = aspl.Eval(X[i]) ; }
auto *g2 = new TGraph(500, X, Y);
g2->Draw("SAME")
